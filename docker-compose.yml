version: '3'
services:
  task_database:
    image: postgres:latest
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=js_password
      - POSTGRES_DB=job_scheduler_db
    volumes:
      - ./setup/init.sql:/docker-entrypoint-initdb.d/init.sql
      - /var/lib/postgresql/data
    tmpfs:
      - /var/lib/postgresql/data
    profiles: ["stores", "all"]
  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    profiles: ["stores", "all"]
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8088:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: true
      KAFKA_CLUSTERS_0_NAME: Kafka Job Scheduler Cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka
    profiles: [ "monitoring", "all" ]
  api-service:
    image: buharovalexander/job-scheduler-api-service:latest
    labels:
      - "logging=enabled"
    ports:
      - "8081:8080"
    environment:
      - JS_DATABASE_USER=postgres
      - JS_DATABASE_PASSWORD=js_password
      - JS_DATABASE_URL=task_database
      - JS_DATABASE_PORT=5432
    depends_on:
      - task_database
    profiles: ["services", "all"]
  task-runner-service:
    image: buharovalexander/job-scheduler-task-runner-service:latest
    labels:
      - "logging=enabled"
    environment:
      - JS_DATABASE_USER=postgres
      - JS_DATABASE_PASSWORD=js_password
      - JS_DATABASE_URL=task_database
      - JS_DATABASE_PORT=5432
      - KAFKA_HOSTNAME=kafka
      - KAFKA_PORT=9092
    depends_on:
      - task_database
      - kafka
      - api-service
    profiles: ["services", "all"]
  execution-service:
    image: buharovalexander/job-scheduler-execution-service:latest
    labels:
      - "logging=enabled"
    environment:
      - JS_DATABASE_USER=postgres
      - JS_DATABASE_PASSWORD=js_password
      - JS_DATABASE_URL=task_database
      - JS_DATABASE_PORT=5432
      - KAFKA_HOSTNAME=kafka
      - KAFKA_PORT=9092
    depends_on:
      - task_database
      - kafka
      - api-service
    profiles: [ "services", "all" ]
  loki:
    image: grafana/loki:2.9.4
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki-config.yml
    volumes:
      - ./services/monitoring/loki-config.yml:/etc/loki/loki-config.yml
      - ./services/monitoring/loki-wal:/wal
    profiles: [ "monitoring", "all" ]
  promtail:
    image: grafana/promtail:2.9.3
    container_name: promtail
    volumes:
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /etc/machine-id:/etc/machine-id
      - /var/run/docker.sock:/var/run/docker.sock
      - ./services/monitoring/promtail-config.yml:/etc/promtail/config.yml
    profiles: [ "monitoring", "all" ]
  grafana:
    image: grafana/grafana:10.2.3
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - loki
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    profiles: [ "monitoring", "all" ]
